FROM python:3.9

# Adding trusting keys to apt for repositories
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -

# Adding Google Chrome to the repositories
RUN sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'

# Updating apt to see and install Google Chrome
RUN apt-get -y update

# Magic happens
RUN apt-get install -y google-chrome-stable

# Installing Unzip
RUN apt-get install -yqq unzip

# Download the Chrome Driver
RUN wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip

# Unzip the Chrome Driver into /usr/local/bin directory
RUN unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/

# Set display port as an environment variable
ENV DISPLAY=:99

# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1

# Keeps Python from generating .pyc files in the container

ENV PYTHONDONTWRITEBYTECODE=1

# Install pip requirements
COPY requirements.txt .
RUN python -m pip install -r requirements.txt


ENV ENVIRONMENT="prod"
ENV SERVICE_NAME="my_terna_scraper"

ENV DESTINATION_BUCKET="ego-metering-tso-092381324368-eu-west-1"
ENV DOWNLOAD_PATH="/app"
ENV QUEUE_NAME=""

ENV HISTORICAL="true"
ENV COMPANIES="EGO Data"
ENV CUSTOMIZED="false"
ENV MONTH="02"
ENV YEAR="2023"

ENV AWS_ACCESS_KEY_ID="ASIARLAS3ERIKI2ZFJZQ"
ENV AWS_SECRET_ACCESS_KEY="o5SR6X5CLrjOTnjBHA0Zmvzl1ey+rwNQW3KWGv1w"
ENV AWS_SESSION_TOKEN="IQoJb3JpZ2luX2VjEEMaCWV1LXdlc3QtMSJHMEUCIQDGXusRVYbkaeNyEavUQoOvO9mzh4Oz12WUGa7DXMGmaAIgJLmy0U8ed1BIXzSv9j8gOC76m9OVmPvfjf/sZVBks0sqqQMI6///////////ARACGgwwOTIzODEzMjQzNjgiDAXSnvcvlomZaCQd5ir9AtrBv7Nc9vtzPbXP3jV5u/5/fyw5XWFl8eQ5btlAWBeX/Aw+PgjbpEKsjYAYGer5F7G30nzOo0iaaaHeqN3OYlH7syFZN0zL3NF0KuqbLG6lK9byVGsdKuuJvX0ROaCeqdFM3vR1K9TMayJWFweV3XFopCQMJlPegidKhT0z3QnpTpS6K1i5/COZs1JMgp6ZjsIUSu2uaSMFPoTjNjC23YVYsgqb9nr2R9JbKWPLSNJbLrhOpaTdxiRYS1aG9krmFRm6kRVhazy+vfHjLLrRvv0v93kPIOc3H5DAFqwK9Fz+5a2ngPH1pqqgOfYOneMcZ+IbwGEubXDtWFWNS/G5hTOyUr4skjZZthh3EE/UHe250UUW0mywbF5JM+BdbMRenjjpCKkeRqYyRA/wup+NqwRaaZgybpwnGNuAbqbMXnYia/kQff1Nsuy6rG9SuNfuq+st0aHgtSXddVt2WZADnjfVdEnYUMEXE4gNxK7x2ApiT3smUml6CesJ8UYBtjDt15GgBjqmAfIRIs6933LDxeYEaAbcd2jFB8tYPofuREms4jBOKAifA+dHDCT+qvPgp/bIzetW9XQ4AWD+aD0Oy1eAUoblV5kBp7PM/7G1JcOD0ER01lGUzBKDDYBLH47SkyD4LPoMPcmjCyLBdqHoWupod87LyDiPn4GzSAz9Xa+wfoLlYLlggTiKNvSCvFxBVu9fLx0Rg7qFLkOG3BQNYy8CRd3xbO78TR8EnEI="
ENV AWS_DEFAULT_REGION="eu-west-1"

WORKDIR /app
COPY . /app

# Creates a non-root user with an explicit UID and adds permission to access the /app folder
# For more info, please refer to https://aka.ms/vscode-docker-python-configure-containers
RUN adduser -u 5678 --disabled-password --gecos "" appuser && chown -R appuser /app
USER appuser

# During debugging, this entry point will be overridden. For more information, please refer to https://aka.ms/vscode-docker-python-debug
CMD ["python", "src/handler.py"]
