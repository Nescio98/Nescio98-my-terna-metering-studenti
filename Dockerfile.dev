FROM python:3.9

# Adding trusting keys to apt for repositories
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -

# Adding Google Chrome to the repositories
RUN sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'

# Updating apt to see and install Google Chrome
RUN apt-get -y update

# Magic happens
RUN apt-get install -y google-chrome-stable

# Installing Unzip
RUN apt-get install -yqq unzip

# Download the Chrome Driver
RUN wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip

# Unzip the Chrome Driver into /usr/local/bin directory
RUN unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/

# Set display port as an environment variable
ENV DISPLAY=:99

# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1

# Keeps Python from generating .pyc files in the container

ENV PYTHONDONTWRITEBYTECODE=1

# Install pip requirements
COPY requirements.txt .
RUN python -m pip install -r requirements.txt


ENV ENVIRONMENT="prod"
ENV SERVICE_NAME="my_terna_scraper"

ENV DESTINATION_BUCKET="ego-metering-tso-092381324368-eu-west-1"
ENV DOWNLOAD_PATH="/app"
ENV QUEUE_NAME=""

ENV HISTORICAL="false"
ENV COMPANIES="EGO Data"
ENV CUSTOMIZED="true"
ENV MONTH="02"
ENV YEAR="2023"

ENV AWS_ACCESS_KEY_ID="ASIARLAS3ERIDONA7Y7E"
ENV AWS_SECRET_ACCESS_KEY="osVqKxYvdhkH0FN8mi0Wb5i7yZyPNj/2M2kv/+Nz"
ENV AWS_SESSION_TOKEN="IQoJb3JpZ2luX2VjEOb//////////wEaCWV1LXdlc3QtMSJHMEUCIQC3K0I25wVyN7mkIKvsQPWBre+yYyO2c404uptT3TUiJwIgdoP+u1+B/gJ49sVIT8qnZf3BrZIvXxAJ5fLgsbp3VQ4qqQMIj///////////ARACGgwwOTIzODEzMjQzNjgiDBEyLvNyQ5fOzcXhByr9AgZfzAkQqUz5jGuQcwxBt4leprwayQi5A9nUy+rWtcl3wG5xO5HzGsxWORPSt4VJskGH7ltRvoPbjQt673r0fQs4SkQJ3AYhrAbHizcl3rU24LSLGCcCE+ig+xV/YeOioQqMoIM26XYO3xRnO5sDgrrtctff8jj383NrPkrpPVrziEuUBfm9KX27uBcNInj2JDdZYxAs5DFQYooDJAKHad7/jaOjRGlSIPEzLH2/aSl5KpRx3CsSZ2+H9u5Xcs9ehfQt/Qen1VhR1YyxauEpCvrWnIJqisdewt7n9tVSPylrXW2ct11+FGNQ1QKuNBo7/2t+YPlz3liMddiOaX4lwLH9Yfm2dQIW1bh/WkShYkncDzZBkRAiEMx0htqXPB9/+qlz4npIxiCkIHYJzsl10sNiOMjHp0F7wYQnjMjUWCnPADvEN4ULZQcNrktBUi8wchZHsXCXIyIYp+SvQ6UDMbUqobuV8n7vHairLyLM3OoBluvTvekC3ToE7ejJNjCio/2fBjqmAaskw6iuw7/vHRsEjDXzrfZBr/riyzAc8OBw6d4v0wAXBwIjTKdCk458tsK7mJhCceZRGWBzX5dDpt2Nm602C+haxEMMTJQFkIPTtJ3ElcICSGwiEf8gZNUPsUt4+UQQGyoK2d3UMA2r+Ne65rMH3w5anbL5LNjP4/winbnz3GOLl5wmQkMf6tvans23uK40+dzCebhqJX/C7NK+GZ9jba8jrv/au2E="
ENV AWS_DEFAULT_REGION="eu-west-1"

WORKDIR /app
COPY . /app

# Creates a non-root user with an explicit UID and adds permission to access the /app folder
# For more info, please refer to https://aka.ms/vscode-docker-python-configure-containers
RUN adduser -u 5678 --disabled-password --gecos "" appuser && chown -R appuser /app
USER appuser

# During debugging, this entry point will be overridden. For more information, please refer to https://aka.ms/vscode-docker-python-debug
CMD ["python", "src/handler.py"]
